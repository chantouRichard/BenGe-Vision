// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using picture_backend.Models;

#nullable disable

namespace picture_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("picture_backend.Models.Script", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("longtext")
                        .HasColumnName("content");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("script", (string)null);
                });

            modelBuilder.Entity("picture_backend.Models.ScriptAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AnalysisResult")
                        .HasColumnType("longtext")
                        .HasColumnName("analysis_result");

                    b.Property<DateTime>("AnalyzedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("analyzed_at");

                    b.Property<int>("ScriptId")
                        .HasColumnType("int")
                        .HasColumnName("script_id");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId")
                        .IsUnique();

                    b.ToTable("script_analysis", (string)null);
                });

            modelBuilder.Entity("picture_backend.Models.ScriptHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("Response")
                        .HasColumnType("longtext")
                        .HasColumnName("response");

                    b.Property<int>("ScriptId")
                        .HasColumnType("int")
                        .HasColumnName("script_id");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId");

                    b.ToTable("script_history", (string)null);
                });

            modelBuilder.Entity("picture_backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("picture_backend.Models.VisualElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ImageGeneratedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("image_generated_at");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("ScriptId")
                        .HasColumnType("int")
                        .HasColumnName("script_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId");

                    b.ToTable("visual_element", (string)null);
                });

            modelBuilder.Entity("picture_backend.Models.Script", b =>
                {
                    b.HasOne("picture_backend.Models.User", "User")
                        .WithMany("Scripts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("picture_backend.Models.ScriptAnalysis", b =>
                {
                    b.HasOne("picture_backend.Models.Script", "Script")
                        .WithOne("ScriptAnalysis")
                        .HasForeignKey("picture_backend.Models.ScriptAnalysis", "ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Script");
                });

            modelBuilder.Entity("picture_backend.Models.ScriptHistory", b =>
                {
                    b.HasOne("picture_backend.Models.Script", "Script")
                        .WithMany("ScriptHistories")
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Script");
                });

            modelBuilder.Entity("picture_backend.Models.VisualElement", b =>
                {
                    b.HasOne("picture_backend.Models.Script", "Script")
                        .WithMany("VisualElements")
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Script");
                });

            modelBuilder.Entity("picture_backend.Models.Script", b =>
                {
                    b.Navigation("ScriptAnalysis");

                    b.Navigation("ScriptHistories");

                    b.Navigation("VisualElements");
                });

            modelBuilder.Entity("picture_backend.Models.User", b =>
                {
                    b.Navigation("Scripts");
                });
#pragma warning restore 612, 618
        }
    }
}
